---
title: "HW 04 - What should I major in?"
editor: 
  markdown: 
    wrap: sentence
---

![](img/graduates.jpg){fig-align="center" width=100%}


The first step in the process of turning information into knowledge process is to summarize and describe the raw information - the data.

In this assignment we explore data on college majors and earnings, specifically the data discussed in the FiveThirtyEight story ["The Economic Guide To Picking A College Major"](https://fivethirtyeight.com/features/the-economic-guide-to-picking-a-college-major/).

These data originally come from the American Community Survey (ACS) 2010-2012 Public Use Microdata Series.

While this is outside the scope of this assignment, if you are curious about how raw data from the ACS were cleaned and prepared, see [the code](https://github.com/fivethirtyeight/data/blob/master/college-majors/college-majors-rscript.R) FiveThirtyEight authors used.

We should also note that there are many considerations that go into picking a major.

Earnings potential and employment prospects are two of them, and they are important, but they don't tell the whole story.

Keep this in mind as you analyze the data.

# Getting started

Go to the course Posit Cloud Workspace and locate the folder for the homework assignment, which should be named `Assignments: Module 4`.

First, open the R Markdown document `mod-04-hw.Rmd` and Knit it.

## Warm up

Before we introduce the data, let's warm up with some simple exercises.

-   Update the YAML, changing the author name to your name, and **knit** the document.
-   Check the outputs to confirm that your changes are visible in your Rmd **and** pdf files.

## Packages

We'll use the **tidyverse** package for much of the data wrangling and visualization, the **scales** package for better formatting of labels on visualizations, and the data lives in the **fivethirtyeight** package.

These packages are already installed for you.

You can load them by running the following in your Console:

```{r load-packages, message = FALSE, eval = TRUE, warning=FALSE}
library(tidyverse)
library(scales)
library(fivethirtyeight)
```

## Data

The data can be found in the **fivethirtyeight** package, and it's called `college_recent_grads`.

Since the dataset is distributed with the package, we don't need to load it separately; it becomes available to us when we load the package.

You can find out more about the dataset by inspecting its documentation, which you can access by running `?college_recent_grads` in the Console or using the Help menu in RStudio to search for `college_recent_grads`.

You can also find this information [here](https://fivethirtyeight-r.netlify.app/reference/college_recent_grads.html).

You can also take a quick peek at your data frame and view its dimensions with the `glimpse` function.

```{r glimpse}
glimpse(college_recent_grads)
```

The `college_recent_grads` data frame is a trove of information.
Let's think about some questions we might want to answer with these data:

1. Which major has the lowest unemployment rate?
2. Which major has the highest percentage of women?
3. How do the distributions of median income compare across major categories?
4. Do women tend to choose majors with lower or higher earnings?

In the next section we aim to answer these questions.

# Exercises

## 1. Which major has the lowest unemployment rate?

In order to answer this question all we need to do is sort the data.
We use the `arrange` function to do this, and sort it by the `unemployment_rate` variable.
By default `arrange` sorts in ascending order, which is what we want here -- we're interested in the major with the *lowest* unemployment rate.

```{r lowest-unemp}
college_recent_grads %>%
  arrange(unemployment_rate)
```

This gives us what we wanted, but not in an ideal form.
First, the name of the major barely fits on the page.
Second, some of the variables are not that useful (e.g. `major_code`, `major_category`) and some we might want front and center are not easily viewed (e.g. `unemployment_rate`).

We can use the `select` function to choose which variables to display, and in which order:

```{r lowest-unemp-select}
college_recent_grads %>%
  arrange(unemployment_rate) %>%
  select(rank, major, unemployment_rate)
```

:::callout-note
Note how easily we expanded our code with adding another step to our pipeline,
with the pipe operator: `%>%`.
:::

Ok, this is looking better, but do we really need to display all those decimal places in the unemployment variable?
Not really!

We can use the `percent()` function to clean up the display a bit.

```{r}
college_recent_grads %>%
  arrange(unemployment_rate) %>%
  select(rank, major, unemployment_rate) %>%
  mutate(unemployment_rate = percent(unemployment_rate))
```

## 2. Which major has the highest percentage of women?

To answer such a question we need to arrange the data in descending order.
For example, if earlier we were interested in the major with the highest unemployment rate, we would use the following:

```{r}
college_recent_grads %>%
  arrange(desc(unemployment_rate)) %>%
  select(rank, major, unemployment_rate)
```

:::callout-note
The `desc` function specifies that we want `unemployment_rate` in descending order.
:::

### Exercise 1.  

- Using what you've learned so far, arrange the data in descending order with respect to proportion of women in a major, and display: 
  - the major, the total number of people with major, and proportion of women. 
- Show only the top 3 majors by using the `head()` function at the end of the pipeline.

---

## 3. How do the distributions of median income compare across major categories?

There are three types of incomes reported in this data frame: `p25th`, `median`, and `p75th`.

These correspond to the 25th, 50th, and 75th percentiles of the income distribution of sampled individuals for a given major

:::callout-note
A percentile is a measure used in statistics indicating the value below which a given percentage of observations in a group of observations fall. For example, the 20th percentile is the value below which 20% of the observations may be found. (Source: [Wikipedia](https://en.wikipedia.org/wiki/Percentile)
:::

### Exercise 2

-   Why do we often choose the median, rather than the mean, to describe the typical income of a group of people?

---

**Moving on...** 

The question we want to answer is "How do the distributions of median income compare across major categories?".

We need to do a few things to answer this question: First, we need to group the data by `major_category`. Then, we need a way to summarize the distributions of median income within these groups.

This decision will depend on the shapes of these distributions.

So first, we need to visualize the data.

We use the `ggplot()` function to do this.

The first argument is the data frame, and the next argument gives the mapping of the variables of the data to the `aes`thetic elements of the plot. Let's start simple and take a look at the distribution of all median incomes, without considering the major categories.

```{r fig,height=2}
ggplot(data = college_recent_grads, mapping = aes(x = median)) +
  geom_histogram()
```

If you run this code (which you should), along with the plot, we get a message:

    `stat_bin()` using `bins = 30`. Pick better value with `binwidth`.

This is telling us that we might want to reconsider the binwidth we chose for our histogram -- or more accurately, the binwidth we didn't specify.

It's good practice to always think in the context of the data and try out a few binwidths before settling on a binwidth.

You might ask yourself: "What would be a meaningful difference in median incomes?" \$1 is obviously too little, \$10000 might be too high.

### Exercise 3

-   Try binwidths of \$1000 and \$5000 and choose one. Display the figure. 
-   Explain your reasoning for your choice. 

:::callout-note
binwidth is an argument for the `geom_histogram` function. So to specify a binwidth of \$1000, you would use `geom_histogram(binwidth = 1000)`.
:::

### Exercise 4

- Plot the distribution of `median` income using a histogram, faceted by `major_category`
  - Use the `binwidth` you chose in the earlier exercise.

---

**Moving on...**

Now that we've seen the shapes of the distributions of median incomes for each major category, we should have a better idea for which summary statistic to use to quantify the typical median income.

### Exercise 5

-   Which major category has the highest typical median income? Use the partial code below, filling it in with the appropriate statistic and function. 

```{r eval=FALSE}
college_recent_grads %>%
  group_by(major_category) %>%
  summarise(___ = ___(median)) %>%
  arrange(___)
```

:::callout-important
For "typical median income" you'll need to decide what this means when you choose your statistic. There are various options you could choose. Up to you.

Also note that we are looking for the highest statistic, so make sure to arrange in the correct direction.
:::

---

### Exercise 6

-   Which category of major is the least popular in this sample? 

:::callout-tip
To answer this question you want to count the number of observations in each category of major. To do this you will use a very common function that you have seen since Module 1. 

You will then continue with a pipe `%>%` that arranges the results so that the major with the fewest observations is on top.
:::

ðŸ§¶ ðŸ‘€ ðŸ’¾   *Now is a good time to save and knit your document and confirm the outputs look as you expect them to.*

---

### Not all STEM fields are created equally

One of the sections of the [FiveThirtyEight story](https://fivethirtyeight.com/features/the-economic-guide-to-picking-a-college-major/) is "All STEM fields aren't the same". Let's see if this is true.

**First step,** let's create a new vector called `stem_categories` that lists the major categories that are considered STEM fields.

```{r}
stem_categories <- c("Biology & Life Science",
                     "Computers & Mathematics",
                     "Engineering",
                     "Physical Sciences")
```

**Second step,** we can use this to create a new variable in our data frame indicating whether a major is STEM or not.

```{r}
college_recent_grads <- college_recent_grads %>%
  mutate(major_type = ifelse(major_category %in% stem_categories, "stem", "not stem"))
```

Let's unpack what we are doing with `mutate()`: 

1. with `mutate` we create a new variable called `major_type`, which is defined as `"stem"` if the `major_category` is in the vector called `stem_categories` we created earlier, and as `"not stem"` otherwise.

2. `%in%` is a **logical operator**.

Other logical operators that are commonly used are

| Operator            | Operation                |
|:--------------------|:-------------------------|
| `x < y`             | less than                |
| `x > y`             | greater than             |
| `x <= y`            | less than or equal to    |
| `x >= y`            | greater than or equal to |
| `x != y`            | not equal to             |
| `x == y`            | equal to                 |
| `x %in% y`          | contains                 |
| <code>x \| y</code> | or                       |
| `x & y`             | and                      |
| `!x`                | not                      |

**Third step,** let's now use a logical operator to `filter` our data for STEM majors whose median earnings is less than median for all majors' median earnings, which happens to be $36,000. Take note we are also using the new variable `major_type` we created in Steps 1 and 2 to compute this.

```{r, eval=FALSE}
college_recent_grads %>%
  filter(
    major_type == "stem",
    median < 36000
  )
```

:::callout-important
Pay attention to the fact that the "median for all majors' median earnings" (I know, I know, it takes a second to wrap your head around this concept) is $36,000. You can use this knowledge to help answer Exercise 7. 

Also, if you don't believe me that the median for all majors' median earnings $36,000, you can always run the code yourself:

```{r, eval=FALSE}
college_recent_grads %>% summarise(median_of_majors_median = median(median))
```
:::

### Exercise 7

Finally, the **final step** in determining whether all STEM fields are created equally or not. 

- Which STEM majors have median salaries equal to or less than the median for all majors' median earnings? 
  - Your output should have as columns `major`, `median`, `p25th`, and `p75th` 
  - And your dataframe should be sorted such that the major with the highest median earning is on top

::: callout-tip
You can use A LOT of what I already gave you in the earlier steps to answer this. 
:::

---

## 4. Do women tend to choose majors with lower or higher earnings?

### Exercise 8

- Create a scatterplot of median income vs. proportion of women in that major, **colored** by whether the major is in a STEM field or not. 
- Describe the association between the three variables. 

ðŸ§¶ ðŸ‘€ ðŸ’¾   *Now is a good time to save and knit your document and confirm the outputs look as you expect them to.*

---

# Submitting your work

Once you are happy with the final state of your work, change the YAML `output` from `html_output` to `pdf_output.` Now knit the document to produce a final PDF file. Upload the PDF to the Canvas assignment.  
