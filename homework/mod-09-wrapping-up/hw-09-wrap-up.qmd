---
title: "HW 09 - Wrap up!"
# author: "Nick Duran"
# date: "`r Sys.Date()`"
# editor:
#   markdown:
#     wrap: sentence
---

![](img/kari-shea-VfWkdMue5Jc-unsplash.jpg){fig-align="center"}

It's almost time to wrap up the course!

In this two part assignment, we will return to a dataset we started with in Module 1, and then you will try something new and get creative!

# Getting started

Go to Posit Cloud and find your homework R Markdown document, open it up, and adjust the YAML with your information.

Knit the document to make sure it compiles without errors.

## Packages

We'll use the **tidyverse** and **learningtower** package for the first part of this assignment. You can load both by running the following in your Console:

```{r}
#| label: load-packages
#| message: false

library(tidyverse)
library(learningtower)
```

For the second part you get to choose which package to use.

# Exercises

## Part 1: Mirror, mirror on the wall, who's the ugliest of them all?

Below you will find a simple plot using the `student_subset_2018` dataset, which we worked on in a code-along in the first week of the course! This dataset results from the efforts of the Programme for International Student Assessment (PISA) where, every three years, they administer standardized tests in areas of reading, mathematics, and scientific literacy with 600,000+ 15-year-old students across 80 countries.

We're just looking at a small subset of the data from 2018 and we're plotting math scores vs. reading scores, colored by gender (which is PISA's labeling, and is coded as either "male" or "female"). 

### Exercise 1

Make this plot as ugly as possible by changing colors, background color, fonts, or anything else you can think of. 

You will probably want to play around with [theme options](https://ggplot2.tidyverse.org/reference/theme.html), but you can do more. You can also search online for other themes, fonts, etc. that you want to tweak. Try to make it as ugly as possible, the sky is the limit!

::: callout-note
I realize that "ugly" is subjective, so we're mostly looking to see if you can figure out how to change the look of a plot using help files of functions you haven't learned before.
:::

```{r}
#| warning: false
#| code-overflow: wrap

# note: load in data
data(student_subset_2018)                         

set.seed(130)                                     

# note: randomly sample 25% of the data - note that we set a seed to make sure we replicate the same way each time 
pisa_25 = sample_frac(student_subset_2018, .25)   

# note: generate simple plot 
ggplot(data = pisa_25, aes(x = math, y = read, color = gender)) +
  geom_point()
```

## Part 2 - You gotta pick a package or two

But really, one is enough if you pick a fairly complex one.

Pick a package from the lists below, and use it to do something. If you want to use a package not on either list, that's also ok, but it needs to be a package we haven't used in class. If you start with a package and are struggling to get it to work, just move to another one.

Your task is to install the package you pick. Depending on where the package comes from, how you install the package differs:

-   If the package is on CRAN (Comprehensive R Archive Network), you can install it with `install.packages`

-   If the package is only on Github (most likely because it is still under development), you need to use the `install_github` function

::: callout-tip
**Remember:** You *install* the package in the Console, not in the R Markdown document since you don't want to keep reinstalling it every time you knit the document.
:::

Then, load the package.
Regardless of how you installed the package you can load it with the `library` function.

Finally, do something with the package. It doesn't have to be complicated. In fact, **keep it simple**. The goal is for you to read and understand the package documentation to carry out a simple task.

### Exercise 2

- Which package are you using? 
  - state the name of the package,
  - include a one sentence description of what the package does
  - state whether it was on CRAN or GitHub, 
  - and include the code for loading it

- Now do something with the package
  - provide a brief narrative including code and output
  - comment on difficulties you had, if any, figuring out how to use the package

## Packages on CRAN

These packages can be installed with:

```{r}
#| eval: false
install.packages("PACKAGENAME")
```

| Package                                                                                       | Description                                                                                                                                                                                                                                                                                                                              |
|-|----|
| [cowsay](https://cran.r-project.org/web/packages/cowsay/vignettes/cowsay.html)                | Allows printing of character strings as messages/warnings/etc. with ASCII animals, including cats, cows, frogs, chickens, ghosts, and more                                                                                                                                                                                               |
| [babynames](http://hadley.github.io/babynames/)                                               | US Baby Names 1880-2015                                                                                                                                                                                                                                                                                                                  |
| [dragracer](https://cran.r-project.org/web/packages/dragracer/vignettes/dragracer-intro.html) | These are data sets for the hit TV show, RuPaul's Drag Race. Data right now include episode-level data, contestant-level data, and episode-contestant-level data                                                                                                                                                                         |
| [datapasta](https://milesmcbain.github.io/datapasta/)                                         | RStudio addins and R functions that make copy-pasting vectors and tables to text painless                                                                                                                                                                                                                                                |
| [DiagrammeR](https://rich-iannone.github.io/DiagrammeR/)                                      | Graph/Network Visualization                                                                                                                                                                                                                                                                                                              |
| [janeaustenr](https://github.com/juliasilge/janeaustenr)                                      | Full texts for Jane Austen's 6 completed novels, ready for text analysis. These novels are "Sense and Sensibility", "Pride and Prejudice", "Mansfield Park", "Emma", "Northanger Abbey", and "Persuasion"                                                                                                                                |
| [ggimage](https://cran.r-project.org/web/packages/ggimage/index.html)                         | Supports image files and graphic objects to be visualized in 'ggplot2' graphic system                                                                                                                                                                                                                                                    |
| [gganimate](https://github.com/dgrtwo/gganimate)                                              | Create easy animations with ggplot2                                                                                                                                                                                                                                                                                                      |
| [gt](https://gt.rstudio.com/)                                                                 | Easily Create Presentation-Ready Display Tables                                                                                                                                                                                                                                                                                          |
| [leaflet](https://rstudio.github.io/leaflet/)                                                 | Create Interactive Web Maps with the JavaScript 'Leaflet' Library                                                                                                                                                                                                                                                                        |
| [praise](https://cran.r-project.org/web/packages/praise/praise.pdf)                           | Build friendly R packages that praise their users if they have done something good, or they just need it to feel better                                                                                                                                                                                                                  |
| [plotly](https://plotly-r.com/)                                                               | Create interactive web graphics from ggplot2 graphs and/or a custom interface to the JavaScript library plotly.js inspired by the grammar of graphics                                                                                                                                                                                    |
| [suncalc](https://cran.r-project.org/web/packages/suncalc/suncalc.pdf)                        | R interface to `suncalc.js` library, part of the [SunCalc.net project](http://suncalc.net), for calculating sun position, sunlight phases (times for sunrise, sunset, dusk, etc.), moon position and lunar phase for the given location and time                                                                                         |
| [schrute](https://bradlindblad.github.io/schrute/)                                            | The complete scripts from the American version of the Office television show in tibble format                                                                                                                                                                                                                                            |
| [statebins](https://cran.r-project.org/web/packages/statebins/statebins.pdf)                  | The cartogram heatmaps generated by the included methods are an alternative to choropleth maps for the United States and are based on work by the Washington Post graphics department in their report on ["The states most threatened by trade"](http://www.washingtonpost.com/wp-srv/special/business/states-most-threatened-by-trade/) |
| [ttbbeer](https://cran.r-project.org/web/packages/ttbbeer/ttbbeer.pdf)                        | An R data package of beer statistics from U.S. Department of the Treasury, Alcohol and Tobacco Tax and Trade Bureau (TTB)                                                                                                                                                                                                                |
| [ukbabynames](https://cran.r-project.org/web/packages/ukbabynames/ukbabynames.pdf)            | Full listing of UK baby names occurring more than three times per year between 1996 and 2015, and rankings of baby name popularity by decade from 1904 to 1994                                                                                                                                                                           |



## Packages on GitHub only

These packages can be installed with:

```{r}
#| eval: false
library(devtools)
install_github("USERNAME/PACKAGENAME")
```

`USERNAME` refers to the user name of the developer of the package.
For example, for the first package listed below, `USERNAME` is `jennybc` and `PACKAGENAME` is `bingo`.

| Package                                                    | Description                                                                                                                                              |
|-----------------------|--------------------------------------------------|
| [bingo](https://github.com/jennybc/bingo)                  | Generate Bingo cards                                                                                                                                     |
| [BRRR](https://github.com/brooke-watson/BRRR)              | BRRR extends the beepr package to include a number of rap adlibs                                                                                         |
| [CatterPlots](https://github.com/Gibbsdavidl/CatterPlots)  | Plots with Cats                                                                                                                                          |
| [cooking](https://github.com/krlmlr/cooking)               | Chopping, peeling, frying, and cooking various ingredients, and combining them to a delicious ragout. Also includes buying them from a local supermarket |
| [dadjoke](https://github.com/jhollist/dadjoke/)            | The goal of dadjoke is to make you laugh in spite of yourself                                                                                            |
| [emo](https://github.com/hadley/emo)                       | The goal of emo(ji) is to make it very easy to insert emoji into RMarkdown documents                                                                     |
| [emoGG](https://github.com/dill/emoGG)                     | Use Emoji in ggplot2                                                                                                                                     |
| [emokid](https://github.com/itsrainingdata/emokid)         | For those times when you're having trouble expressing how you feel about your broken code                                                                |
| [flametree](https://flametree.djnavarro.net/)              | The goal of flametree is to make pretty pictures                                                                                                         |
| [ggbarf](https://github.com/karawoo/ggbarf)                | Make isotype bars using the vomit emoji                                                                                                                  |
| [ggCyberPunk](https://github.com/delabj/ggCyberPunk)       | Create Cyberpunk area and line plots                                                                                                                     |
| [ggiraph](https://davidgohel.github.io/ggiraph/index.html) | Create interactive ggplot2 graphics using htmlwidgets                                                                                                    |
| [ggkeyboard](https://github.com/sharlagelfand/ggkeyboard)  | Plot a Keyboard Using ggplot2                                                                                                                            |
| [jasmines](https://jasmines.djnavarro.net/)                | Make generative art                                                                                                                                      |
| [kandinsky](https://github.com/gsimchoni/kandinsky)        | Turn any dataset into a Kandinsky painting                                                                                                               |
| [lego](https://github.com/seankross/lego)                  | This R data package contains information about every Lego set manufactured from 1970 to 2015, a total of 6172 sets                                       |
| [linkinpark](https://github.com/delabj/linkinpark)         | Data package that contains a few different datasets about the band                                                                                       |
| [prenoms](https://github.com/ThinkR-open/prenoms)          | First names given to babies in metropolitan France between 1900 and 2015                                                                                 |
| [raybonsai](http://www.raybonsai.com/)                     | Generate 3D procedural trees in R, rendered with rayrender! Procedural generation code based on the flametree package by Danielle Navarro.               |

# Submitting your work

Once you are happy with the final state of your work, change the YAML `output` from `html_output` to `pdf_output.` Now knit the document to produce a final PDF file. Upload the PDF as a Canvas assignment.  